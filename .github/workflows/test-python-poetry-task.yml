# Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/test-python-poetry-task.md
name: Test Python

# See: https://docs.github.com/actions/using-workflows/events-that-trigger-workflows
on:
  create:
  push:
    paths:
      - ".github/workflows/test-python-poetry-task.ya?ml"
      - ".github/.?codecov.ya?ml"
      - "dev/.?codecov.ya?ml"
      - ".?codecov.ya?ml"
      - "go.mod"
      - "go.sum"
      - "Taskfile.ya?ml"
      - "poetry.lock"
      - "pyproject.toml"
      - "test/tests/**"
      - "tools.go"
      - "**.py"
      - "**/pytest.ini"
  pull_request:
    paths:
      - ".github/workflows/test-python-poetry-task.ya?ml"
      - ".github/.?codecov.ya?ml"
      - "dev/.?codecov.ya?ml"
      - ".?codecov.ya?ml"
      - "go.mod"
      - "go.sum"
      - "Taskfile.ya?ml"
      - "poetry.lock"
      - "pyproject.toml"
      - "test/tests/**"
      - "tools.go"
      - "**.py"
      - "**/pytest.ini"
  schedule:
    # Run periodically to catch breakage caused by external changes.
    - cron: "0 12 * * WED"
  workflow_dispatch:
  repository_dispatch:

jobs:
  run-determination:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.determination.outputs.result }}
    permissions: {}
    steps:
      - name: Determine if the rest of the workflow should run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="^refs/heads/v[0-9]+$"
          # The `create` event trigger doesn't support `branches` filters, so it's necessary to use Bash instead.
          if [[
            "${{ github.event_name }}" != "create" ||
            "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX
          ]]; then
            # Run the other jobs.
            RESULT="true"
          else
            # There is no need to run the other jobs.
            RESULT="false"
          fi

          echo "result=$RESULT" >> $GITHUB_OUTPUT

  test:
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install Task
        run: |
          go \
            install \
              github.com/go-task/task/v3/cmd/task

      - name: Run tests
        uses: liskin/gh-problem-matcher-wrap@v3
        with:
          linters: pytest
          run: task --silent python:test

      - name: Display code coverage report
        run: task python:coverage-report

      - name: Send unit tests coverage to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v4
        with:
          # Even though the file is specified via the `file` input. The action still pointlessly searches for the file
          # by default.
          disable_search: true
          fail_ci_if_error: true
          file: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
