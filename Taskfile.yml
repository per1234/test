# See: https://taskfile.dev/#/usage
version: "3"

vars:
  # Path of the project's primary Go module:
  DEFAULT_GO_MODULE_PATH: ./
  # The Go version used for project development.
  GO_VERSION: 1.21

  PYTHON_PROJECT_PATH: test

tasks:
  # Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/assets/check-go-task/Taskfile.yml
  go:tidy:
    desc: Refresh dependency metadata
    dir: "{{default .DEFAULT_GO_MODULE_PATH .GO_MODULE_PATH}}"
    cmds:
      - |
        go \
          mod \
            tidy \
              -compat={{.GO_VERSION}}

  poetry:install:
    desc: Install Poetry
    run: once
    vars:
      PYTHON_PATH:
        sh: task utility:normalize-path RAW_PATH="$(which python)"
    cmds:
      - |
        if ! which pipx &>/dev/null; then
          echo "pipx not found or not in PATH."
          echo "Please install: https://pipx.pypa.io/stable/installation/#installing-pipx"
          exit 1
        fi
      - |
        if ! which yq &>/dev/null; then
          echo "yq not found or not in PATH."
          echo "Please install: https://github.com/mikefarah/yq/#install"
          exit 1
        fi
      - |
        pipx install \
          --python "{{.PYTHON_PATH}}" \
          "poetry==$( \
            yq \
              --input-format toml \
              --output-format yaml \
              '.tool.poetry.group.pipx.dependencies.poetry' \
              < pyproject.toml
          )"

  # Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/assets/poetry-task/Taskfile.yml
  poetry:install-deps:
    desc: Install dependencies managed by Poetry
    run: when_changed
    deps:
      - task: poetry:install
    cmds:
      - |
        poetry install \
          {{if .POETRY_GROUPS}} --only {{.POETRY_GROUPS}} {{end}}

  poetry:sync:
    desc: Sync poetry.lock
    deps:
      - task: poetry:install
    cmds:
      - |
        poetry lock \
          --no-cache \
          --no-update

  python:coverage-report:
    desc: Show code coverage report
    deps:
      - task: poetry:install-deps
        vars:
          POETRY_GROUPS: dev
    cmds:
      - |
        poetry run \
          coverage report

  python:test:
    desc: Run Python tests
    deps:
      - task: poetry:install-deps
        vars:
          POETRY_GROUPS: dev,main
    cmds:
      - |
        poetry run \
          coverage run \
            --source="{{.PYTHON_PROJECT_PATH}}" \
            --module \
              pytest "{{.PYTHON_PROJECT_PATH}}/tests"
      - |
        poetry run \
          coverage xml

  # Print a normalized version of the path passed via the RAW_PATH variable to stdout
  # Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/assets/windows-task/Taskfile.yml
  utility:normalize-path:
    cmds:
      - |
        if [[ "{{.OS}}" == "Windows_NT" ]] && which cygpath &>/dev/null; then
            # Even though the shell handles POSIX format absolute paths as expected, external applications do not.
            # So paths passed to such applications must first be converted to Windows format.
            cygpath -w "{{.RAW_PATH}}"
        else
          echo "{{.RAW_PATH}}"
        fi
